在IE9以下，通过className获取元素会有兼容性问题，因此，
需要封装一个函数来解决此问题，详细代码如下：

	function getEle(s){
	
	//通过传入进来的字符串，截取第一个字符，来走不同的获取元素方式
		
		var t=s.substring(0,1);
		
		//用数组来存页面中的元素标签
		
		var arr=document.getElementsByclassName('*');
		
		//	空数组用来存className为指定值的元素
		var arr1=[];	
		if(t==='#'){
		 //如果，截取出来的字符是#，那么走获取id的方式
		 
			return document.getElementById(s.substring(1));
			
		}else if(t==='.'){
		
		//循环遍历数组中的所有元素 在这里，为了兼容，不应该使用es6的数组方法
			for(var i=0;i<arr.length;i++){
			//切割className为多个的className字符串
			
				var arr2=arr[i].className.split(' ');
				
				//循环切割的数组，判断是否相等，为true时把元素放入到arr1中
				for(var j=0;j<arr2.length;j++){
					if(arr2[j]===s.substring(1)){
						arr1.push(arr[i])
					}
				}
			}
		 return arr1;
		}else{	
		//通过获取TagName方式获取元素
		
			return document.getElementByTagName(s);
		}
	}
