// npm install -g webpack
// npm install --save-dev webpack:or add it as dependency in your project with
// npm init 
// Let's create a sample project to use Webpack. Start with a new, empty folder and create a package.json file - a standard npm manifest that holds various information about the project and let the developer specify dependencies (that can get automatically downloaded and installed) and define script tasks. To create a package.json file, run the following command on the terminal:

// With the project set up and webpack installed, let's move on to the project structure, which will consist of two folders: an "app" folder for original source code / JavaScript modules, and a "public" folder for files that are ready to be used in the browser (which include the bundled JavaScript file generated by Webpack, as well as an index.html file). You will create three files: An index.html file on the public folder and two JavaScript files on the app folder: main.js and Greeter.js. In the end, the project structure will look like the image below:
//如果没有配置webpack.config.js文件，需要使用node_modules/.bin/webpack app/main.js public/bundle.js
// 如果配置了webpack.config.js，使用node_modules/.bin/webpack 
//初始化时 APP文件  public文件  app文件包含入口文件和模块文件，public文件里面包含index.html文件，打包好之后有bundle.js文件
// npm install --save-dev webpack-dev-server,安装完成之后要把package.json里面的start后面改为webpack-dev-server --progress
var greeter=require('./Greeter');

document.getElementById('root').appendChild(greeter());
